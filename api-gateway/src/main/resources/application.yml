server:
  port: 7000
spring:
  application:
    name: api-gateway
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.201.52:13306/my_test?createDatabaseIfNotExist=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: EverSecHengAn123!@#
  jpa:
    show-sql: true # 默认false，在日志里显示执行的sql语句
    hibernate:
      ddl-auto: update #指定为update，每次启动项目检测表结构有变化的时候会新增字段，表不存在时会 新建，如果指定create，则每次启动项目都会清空数据并删除表，再新建
        #naming:
      #指定jpa的自动表生成策略，驼峰自动映射为下划线格式7
      #   implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      #physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 启用探测器，让gateway可以发现nacos中的微服务
      routes: # 路由数组（路由：就是当指定请求满足什么条件的时候，转发到哪个微服务
        - id: product-route # 当前路由表示，要求唯一，默认UUID
          uri: lb://service-product
          order: 1 # 路由的优先级，数字越小级别越高
          predicates: # 断言（就是路由转发要满足的条件）
            - Path=/product-service/** # 当请求路径满足Path指定的规则时，才进行路由转发
            - Age=18,60 #限制年龄只有18到60岁的人能访问
          filters: # 过滤器，请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1 # 转发之前去掉1层路径
            - Log=true,false #控制日志是否开启,自定义过滤器
            - RedirectTo=302,https://www.baidu.com # 内置局部过滤器，将原始请求重定向到指定URL及http状态码
        - id: order-route  # 测试zipkin http://localhost:7000/order-serv/getDisCovery/fegin/1?token=123
          uri: lb://service-order
          order: 1
          predicates:
            - Path=/order-serv/**
          filters:
            - StripPrefix=1
    nacos:
      discovery:
        server-addr: localhost:8848

  zipkin:
    base-url: http://localhost:9411/ #zipkin server的请求地址
    discovery-client-enabled: false #让nacos把它当成一个url而不是一个服务
  sleuth:
    sampler:
      probability: 1.0 #采样的百分比